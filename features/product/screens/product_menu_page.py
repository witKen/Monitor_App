
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
from pathlib import Path
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Scrollbar, Tk, Canvas, Entry, Text, Button, PhotoImage, Toplevel, Frame, Label
from customtkinter import *
import asyncio
from constants.global_variable import *
from features.product.services.product_services import ProductServices
from features.product.services.order_services import OrderServices
from features.product.widgets.drink_tile import DrinkTile
from models.product_model import Product
# from featurea.product.widgets.drink_tile import DrinkTile
OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH.parent.parent.parent / "assets/frame0"
# ASSETS_PATH = OUTPUT_PATH / Path(r"Monitor_App/assets/frame1")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)
window = Tk()
window.geometry("1024x720")
# screen_width = window.winfo_screenwidth()
# screen_height = window.winfo_screenheight()
# window.geometry(f"{screen_width}x{screen_height}+0+0")
window.configure(bg = "#FFFFFF")

# screen_width = window.winfo_screenwidth()
# canvas = Canvas(
#     window,
#     bg = "#FFFFFF",
#     height = 200,
#     width = screen_width,
#     bd = 0,
#     highlightthickness = 0,
#     relief = "ridge"
# )
# canvas.place(x = 0, y = 0)
# canvas.create_text(
#     64.0,
#     117.0,
#     anchor="nw",
#     text="Choose your drink",
#     fill="#11284C",
#     font=("Niradei Bold", 32 * -1)
# )
# image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
# canvas.create_image(
#     108.0,
#     49.0,
#     image=image_image_1
# )
# canvas.create_text(
#     164.3662109375,
#     37.4525146484375,
#     anchor="nw",
#     text="Robot Cafe",
#     fill="#11284C",
#     font=("CADTMonoDisplay Regular", 32 * -1)
# )
# # Scrolling setup
canvas1 = Canvas(window, bg="white")
canvas1.pack(side="left", fill="both", expand=True)
scrollable_frame = Frame(canvas1, bg="white", width=720) # Adjust width as needed
scrollable_frame.bind( # Configure for dynamic scroll region
       "<Configure>",
       lambda e: canvas1.configure(
           scrollregion=canvas1.bbox("all")
       )
   )
# canvas.configure(yscrollcommand=scrollbar.set)
# Create drinks frame
drinks_frame = Frame(scrollable_frame, bg="yellow")
drinks_frame.pack(pady=10, padx=10, side="left")

scrollbar = Scrollbar(window, orient="vertical", command=canvas1.yview)
scrollbar.pack(side="right", fill="y")
canvas1.configure(yscrollcommand=scrollbar.set)
canvas1.create_window(0, 0, window=scrollable_frame, anchor='nw') 

async def create_drink_menu():
    
    loading_label = Label(drinks_frame, text="Loading...")
    loading_label.grid(row=0, column=0)
    product_data = await ProductServices.fetch_coffee_data_async()
    loading_label.destroy()

    row = 0
    column = 0
    for i, drink_data in enumerate(product_data):
        drink = Product(
            id = drink_data["_id"],
            name=drink_data["name"],
            description=drink_data["description"],
            price=drink_data["price"],
            image_url=drink_data["image"]
        )
        frame = Frame(drinks_frame, background="white") 
        frame.grid(row=row, column=column, padx=0, pady=210, sticky="w")
        
        DrinkTile(
            parent=frame, 
            drink_id = drink.id,
            drink_flavour=drink.name,
            drink_price=drink.price,
            drink_description=drink.description,
            drink_image=drink.image_url
        )
        
        
        column += 1
        if column == 4:  # Or some other number of columns you prefer
            row += 1
            column = 0
        print(drink.image_url)
        print("row:" + str(row) + " " + "Column: " + str(column) )
        
        

    # scroll_frame = customtkinter.CTkScrollbar(master=window, )
        # button_image_1 = PhotoImage(
        #     file=relative_to_assets("button_1.png"))
        # button_1 = Button(
        #     image=button_image_1,
        #     borderwidth=0,
        #     highlightthickness=0,
        #     command=lambda: print("button_1 clicked"),
        #     relief="flat"
        # )
        # button_1.place(
        #     x=44.0,
        #     y=211.0,
        #     width=185.10841369628906,
        #     height=235.8418426513672
        # )
# button_image_2 = PhotoImage(
#     file=relative_to_assets("button_2.png"))
# button_2 = Button(
#     image=button_image_2,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_2 clicked"),
#     relief="flat"
# )
# button_2.place(
#     x=294.0,
#     y=211.0,
#     width=185.10841369628906,
#     height=235.8418426513672
# )
# button_image_3 = PhotoImage(
#     file=relative_to_assets("button_3.png"))
# button_3 = Button(
#     image=button_image_3,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_3 clicked"),
#     relief="flat"
# )
# button_3.place(
#     x=544.0,
#     y=211.0,
#     width=185.10841369628906,
#     height=235.8418426513672
# )
# button_image_4 = PhotoImage(
#     file=relative_to_assets("button_4.png"))
# button_4 = Button(
#     image=button_image_4,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_4 clicked"),
#     relief="flat"
# )
# button_4.place(
#     x=794.0,
#     y=211.0,
#     width=185.10841369628906,
#     height=235.8418426513672
# )
# button_image_4 = PhotoImage(
#     file=relative_to_assets("button_4.png"))
# button_4 = Button(
#     image=button_image_4,
#     borderwidth=0,
#     highlightthickness=0,
#     command=lambda: print("button_4 clicked"),
#     relief="flat"
# )
# button_4.place(
#     x=794.0,
#     y=511.0,
#     width=185.10841369628906,
#     height=235.8418426513672, 
# )
# canvas.create_rectangle(
#     0.0,
#     0.0,
#     1024.0,
#     102.0,
#     fill="#FFFFFF",
#     outline="")
        
# Create drink widgets asynchronously
loop = asyncio.get_event_loop()       
loop.run_until_complete(create_drink_menu())


window.resizable(False, False)
window.mainloop()
