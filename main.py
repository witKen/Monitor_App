
# This file was generated by the Tkinter Designer by Parth Jadhav

# https://github.com/ParthJadhav/Tkinter-Designer



from pathlib import Path


# from tkinter import *

# Explicit imports to satisfy Flake8

from tkinter import Label, StringVar, Tk, Canvas, Entry, Text, Button, PhotoImage, Toplevel, messagebox
import customtkinter
import re

OUTPUT_PATH = Path(__file__).parent

ASSETS_PATH = OUTPUT_PATH / Path(r"./assets/frame0")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

#frame setup
window = Tk()
window.geometry("1024x720")
window.configure(bg = "#FFFFFF")

# app_font
entry_font = customtkinter.CTkFont(family="Arial", size=16)


# validate user signin
username_error_message = StringVar()  # String variable for username error
password_error_message = StringVar()  # String variable for password error


def register():

    # get information
    username = username_entry.get()
    password = password_entry.get()

    username_error = ""
    password_error = ""

    username_validate = False
    password_validate = False

    pattern = r"^[a-zA-Z0-9_]+$"
    # validate username
    if not username: 
        username_error = "Username cannot be empty."
    elif len(username) < 5: 
        username_error = "Username must be at least 5 characters long."
            
    elif not re.fullmatch(pattern, username):
        username_error = "Username must not contain any special characters."
    elif username == "heaklinh":
        username_validate = True
       
        
    #validate password
    if not password:
        password_error = "Password cannot be empty."
    elif len(password) < 8:
        password_error = "Password must contains at least 8 characters"
    elif password == "heaklinh123":
        password_validate = True

    username_error_message.set(username_error)  # Update error message variables
    password_error_message.set(password_error)
    if username_validate & password_validate:

        window.destroy()
        import features.product.screens.product_menu_page as product_menu_page
        product_menu_page.window
        
    # window.update_idletasks()
    # store information (add your logic here)
    # window.withdraw()
    # parent_window = window
    # from gui1 import menu_screen
    # menu_screen(parent_window)


    

canvas = Canvas(window, bg = "#FFFFFF", height = 720, width = 1024, bd = 0, highlightthickness = 0, relief = "ridge")
canvas.place(x = 0, y = 0)
canvas.create_text(
    484.5166015625,
    91.0,
    anchor="nw",
    text="Robot Cafe",
    fill="#11284C",
    font=("CADTMonoDisplay Regular", 40 * -1)
)


image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))

image_1 = canvas.create_image(
    427.0,
    90.0,
    image=image_image_1
)

username_label = customtkinter.CTkLabel(window, text="Username", text_color="#11284c", font=entry_font)
username_label.place(x=293.0, y=210.0)

username_entry = customtkinter.CTkEntry(
    window, 
    placeholder_text_color='#11284c',
    font=entry_font, 
    border_color='#11284c',
    corner_radius=0,  
    height=64,
    width=440
)  

username_entry.place(
    x=293.0,
    y=242.0,
)

username_error_label = Label(window, textvariable=username_error_message,bg="#FFFFFF", fg="red", font=("Arial", 10))
username_error_label.place(x=293, y=310)  # Adjust placement 



password = StringVar()  #Password variable
bullet = "\u2022"       #specifies bullet character

password_label = customtkinter.CTkLabel(window, text="Password", text_color="#11284c", font=entry_font)
password_label.place(x=293.0, y=330.0)

password_entry = customtkinter.CTkEntry(window, placeholder_text="Password", font=entry_font, placeholder_text_color='#11284c', border_color='#11284c',corner_radius=0,  height=64, width=440, textvariable=password, show=bullet)
password_entry.place(x=293.0, y=360.0,)

password_error_label = Label(window, textvariable=password_error_message, bg="#FFFFFF", fg="red", font=("Arial", 10))
password_error_label.place(x=293, y=425)  # Adjust placement as needed


button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
button_submit = Button(image=button_image_1, borderwidth=0, highlightthickness=0, command=register, relief="flat" )
button_submit.place(x=293.0, y=485.15826416015625, width=439.0, height=65.8499984741211)

window.resizable(False, False)
window.mainloop() 





